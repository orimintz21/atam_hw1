.global _start

.section .text
    mov $root, %rax
    cmpq $node_0, (%rax)
    jne bad_exit

    movq $node_0, %rax
    cmpq $0, (%rax)
    jne bad_exit
    cmpq $new_node, 8(%rax)
    jne bad_exit
    cmpq $node_3, 16(%rax)
    jne bad_exit

    movq $new_node, %rax
    cmpq $-4, (%rax)
    jne bad_exit
    cmpq $0, 8(%rax)
    jne bad_exit
    cmpq $0, 16(%rax)
    jne bad_exit

    movq $node_3, %rax
    cmpq $3, (%rax)
    jne bad_exit
    cmpq $0, 8(%rax)
    jne bad_exit
    cmpq $node_4, 16(%rax)
    jne bad_exit

    movq $node_4, %rax
    cmpq $4, (%rax)
    jne bad_exit
    cmpq $0, 8(%rax)
    jne bad_exit
    cmpq $node_5, 16(%rax)
    jne bad_exit

    movq $node_5, %rax
    cmpq $5, (%rax)
    jne bad_exit
    cmpq $0, 8(%rax)
    jne bad_exit
    cmpq $0, 16(%rax)
    jne bad_exit

    movq $60, %rax
    movq $0, %rdi
    syscall

bad_exit:
    movq $60, %rax
    movq $1, %rdi
    syscall

.section .data
root: .quad node_0
node_0:
  .quad 0
  .quad 0
  .quad node_3
node_3:
  .quad 3
  .quad 0
  .quad node_4
node_4:
  .quad 4
  .quad 0
  .quad node_5
node_5:
  .quad 5
  .quad 0
  .quad 0
new_node: .quad -4, 0, 0
