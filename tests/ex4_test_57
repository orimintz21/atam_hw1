.global _start

.section .text
    mov $root, %rax
    cmpq $node2, (%rax)
    jne bad_exit

    movq $node2, %rax
    cmpq $2, (%rax)
    jne bad_exit
    cmpq $node0, 8(%rax)
    jne bad_exit
    cmpq $node3, 16(%rax)
    jne bad_exit

    movq $node0, %rax
    cmpq $0, (%rax)
    jne bad_exit
    cmpq $0, 8(%rax)
    jne bad_exit
    cmpq $0, 16(%rax)
    jne bad_exit

    movq $node3, %rax
    cmpq $3, (%rax)
    jne bad_exit
    cmpq $0, 8(%rax)
    jne bad_exit
    cmpq $node6, 16(%rax)
    jne bad_exit

    movq $node6, %rax
    cmpq $6, (%rax)
    jne bad_exit
    cmpq $0, 8(%rax)
    jne bad_exit
    cmpq $new_node, 16(%rax)
    jne bad_exit

    movq $new_node, %rax
    cmpq $7, (%rax)
    jne bad_exit
    cmpq $0, 8(%rax)
    jne bad_exit
    cmpq $0, 16(%rax)
    jne bad_exit

    movq $60, %rax
    movq $0, %rdi
    syscall

bad_exit:
    movq $60, %rax
    movq $1, %rdi
    syscall

.section .data
root:
  .quad node2
node2:
  .quad 2
  .quad node0
  .quad node3
node0:
  .quad 0
  .quad 0
  .quad 0
node3:
  .quad 3
  .quad 0
  .quad node6
node6:
  .quad 6
  .quad 0
  .quad 0
new_node: .quad 7, 0, 0
