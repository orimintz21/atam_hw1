.global _start

.section .text
    mov $root, %rax
    cmpq $node_0, (%rax)
    jne bad_exit

    movq $node_0, %rax
    cmpq $0, (%rax)
    jne bad_exit
    cmpq $0, 8(%rax)
    jne bad_exit
    cmpq $node_1, 16(%rax)
    jne bad_exit

    movq $node_1, %rax
    cmpq $1, (%rax)
    jne bad_exit
    cmpq $0, 8(%rax)
    jne bad_exit
    cmpq $0, 16(%rax)
    jne bad_exit

    movq $60, %rax
    movq $0, %rdi
    syscall

bad_exit:
    movq $60, %rax
    movq $1, %rdi
    syscall

.section .data
root: .quad node_0
node_0:
  .quad 0
  .quad 0
  .quad node_1
node_1:
  .quad 1
  .quad 0
  .quad 0
new_node: .quad 1, 0, 0
