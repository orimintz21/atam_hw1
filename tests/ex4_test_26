.global _start

.section .text
    mov $root, %rax
    cmpq $node_neg_4, (%rax)
    jne bad_exit

    movq $node_neg_4, %rax
    cmpq $-4, (%rax)
    jne bad_exit
    cmpq $node_neg_12, 8(%rax)
    jne bad_exit
    cmpq $node_0, 16(%rax)
    jne bad_exit

    movq $node_neg_12, %rax
    cmpq $-12, (%rax)
    jne bad_exit
    cmpq $node_neg_14, 8(%rax)
    jne bad_exit
    cmpq $node_neg_5, 16(%rax)
    jne bad_exit

    movq $node_0, %rax
    cmpq $0, (%rax)
    jne bad_exit
    cmpq $node_neg_1, 8(%rax)
    jne bad_exit
    cmpq $node_6, 16(%rax)
    jne bad_exit

    movq $node_neg_14, %rax
    cmpq $-14, (%rax)
    jne bad_exit
    cmpq $0, 8(%rax)
    jne bad_exit
    cmpq $node_neg_13, 16(%rax)
    jne bad_exit

    movq $node_neg_5, %rax
    cmpq $-5, (%rax)
    jne bad_exit
    cmpq $node_neg_8, 8(%rax)
    jne bad_exit
    cmpq $0, 16(%rax)
    jne bad_exit

    movq $node_neg_1, %rax
    cmpq $-1, (%rax)
    jne bad_exit
    cmpq $node_neg_3, 8(%rax)
    jne bad_exit
    cmpq $0, 16(%rax)
    jne bad_exit

    movq $node_6, %rax
    cmpq $6, (%rax)
    jne bad_exit
    cmpq $node_3, 8(%rax)
    jne bad_exit
    cmpq $node_13, 16(%rax)
    jne bad_exit

    movq $node_neg_13, %rax
    cmpq $-13, (%rax)
    jne bad_exit
    cmpq $0, 8(%rax)
    jne bad_exit
    cmpq $0, 16(%rax)
    jne bad_exit

    movq $node_neg_8, %rax
    cmpq $-8, (%rax)
    jne bad_exit
    cmpq $node_neg_11, 8(%rax)
    jne bad_exit
    cmpq $node_neg_6, 16(%rax)
    jne bad_exit

    movq $node_neg_3, %rax
    cmpq $-3, (%rax)
    jne bad_exit
    cmpq $0, 8(%rax)
    jne bad_exit
    cmpq $node_neg_2, 16(%rax)
    jne bad_exit

    movq $node_3, %rax
    cmpq $3, (%rax)
    jne bad_exit
    cmpq $node_1, 8(%rax)
    jne bad_exit
    cmpq $node_4, 16(%rax)
    jne bad_exit

    movq $node_13, %rax
    cmpq $13, (%rax)
    jne bad_exit
    cmpq $node_11, 8(%rax)
    jne bad_exit
    cmpq $node_15, 16(%rax)
    jne bad_exit

    movq $node_neg_11, %rax
    cmpq $-11, (%rax)
    jne bad_exit
    cmpq $0, 8(%rax)
    jne bad_exit
    cmpq $0, 16(%rax)
    jne bad_exit

    movq $node_neg_6, %rax
    cmpq $-6, (%rax)
    jne bad_exit
    cmpq $0, 8(%rax)
    jne bad_exit
    cmpq $0, 16(%rax)
    jne bad_exit

    movq $node_neg_2, %rax
    cmpq $-2, (%rax)
    jne bad_exit
    cmpq $0, 8(%rax)
    jne bad_exit
    cmpq $0, 16(%rax)
    jne bad_exit

    movq $node_1, %rax
    cmpq $1, (%rax)
    jne bad_exit
    cmpq $0, 8(%rax)
    jne bad_exit
    cmpq $0, 16(%rax)
    jne bad_exit

    movq $node_4, %rax
    cmpq $4, (%rax)
    jne bad_exit
    cmpq $0, 8(%rax)
    jne bad_exit
    cmpq $0, 16(%rax)
    jne bad_exit

    movq $node_11, %rax
    cmpq $11, (%rax)
    jne bad_exit
    cmpq $0, 8(%rax)
    jne bad_exit
    cmpq $0, 16(%rax)
    jne bad_exit

    movq $node_15, %rax
    cmpq $15, (%rax)
    jne bad_exit
    cmpq $0, 8(%rax)
    jne bad_exit
    cmpq $0, 16(%rax)
    jne bad_exit

    movq $60, %rax
    movq $0, %rdi
    syscall

bad_exit:
    movq $60, %rax
    movq $1, %rdi
    syscall

.section .data
root: .quad node_neg_4
node_neg_4:
  .quad -4
  .quad node_neg_12
  .quad node_0
node_neg_12:
  .quad -12
  .quad node_neg_14
  .quad node_neg_5
node_0:
  .quad 0
  .quad node_neg_1
  .quad node_6
node_neg_14:
  .quad -14
  .quad 0
  .quad node_neg_13
node_neg_5:
  .quad -5
  .quad node_neg_8
  .quad 0
node_neg_1:
  .quad -1
  .quad node_neg_3
  .quad 0
node_6:
  .quad 6
  .quad node_3
  .quad node_13
node_neg_13:
  .quad -13
  .quad 0
  .quad 0
node_neg_8:
  .quad -8
  .quad node_neg_11
  .quad node_neg_6
node_neg_3:
  .quad -3
  .quad 0
  .quad node_neg_2
node_3:
  .quad 3
  .quad node_1
  .quad node_4
node_13:
  .quad 13
  .quad node_11
  .quad node_15
node_neg_11:
  .quad -11
  .quad 0
  .quad 0
node_neg_6:
  .quad -6
  .quad 0
  .quad 0
node_neg_2:
  .quad -2
  .quad 0
  .quad 0
node_1:
  .quad 1
  .quad 0
  .quad 0
node_4:
  .quad 4
  .quad 0
  .quad 0
node_11:
  .quad 11
  .quad 0
  .quad 0
node_15:
  .quad 15
  .quad 0
  .quad 0
new_node: .quad -14, 0, 0
